package servlet;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;

import DAO.DAO_Exception;
import DAO.DAO_Lieu;
import donnees.LieuEntity;

/**
 * Servlet implementation class LieuServlet
 */
public class LieuServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
   
    public LieuServlet() {
        super();
    }
    
    public List<LieuEntity> getListeLieux() {
    	EntityManagerFactory emf = Persistence.createEntityManagerFactory("AssociationPU");
		EntityManager em = emf.createEntityManager();
		Query requete = (Query) em.createQuery("SELECT l FROM LieuEntity l");
		return (List<LieuEntity>) requete.getResultList();
    }
    
    public void insertNewLieu(HttpServletRequest request, HttpServletResponse response) throws IOException {
    	try {
            // Récupérer les données du formulaire
            String nom = request.getParameter("nom");
            String adresse = request.getParameter("adresse");
            int nbMaxPers = Integer.parseInt(request.getParameter("nbMaxPers"));

            // Créer un nouvel objet LieuEntity avec les données du formulaire
            LieuEntity nouveauLieu = new LieuEntity();
            nouveauLieu.setNom(nom);
            nouveauLieu.setAdresse(adresse);
            nouveauLieu.setNbMaxPers(nbMaxPers);

            // Utiliser LieuDAO pour ajouter le lieu à la base de données
            DAO_Lieu lieuDAO = new DAO_Lieu();
            lieuDAO.create(nouveauLieu);

            // Rediriger vers une page de confirmation ou une autre page appropriée
            response.sendRedirect("/confirmation.jsp");
        } catch (DAO_Exception e) {
            e.printStackTrace(); // Gérer l'exception de manière appropriée dans votre application
            // Rediriger vers une page d'erreur
            response.sendRedirect("/erreur.jsp");
        }
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String operation = request.getParameter("operation");
		if (operation.equals("listeLieux")) {
			// rï¿½cupï¿½re la liste des sportifs et l'associe ï¿½ la requï¿½te HTTP
			request.setAttribute("lieux", this.getListeLieux());
			// forwarde la requï¿½te ï¿½ la page JSP
			getServletConfig().getServletContext().getRequestDispatcher("/afficheLieux.jsp")
				.forward(request, response);
		} else if (operation.equals("ajouterLieu")) {
			this.insertNewLieu(request, response);
			getServletConfig().getServletContext().getRequestDispatcher("/afficheLieux.jsp")
			.forward(request, response);
		}
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
