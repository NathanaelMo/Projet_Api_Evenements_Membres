plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war' // Ajoutez cette ligne pour inclure le plugin War
}

group = 'com'
version = '0.0.3-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// This dependency is exported to consumers, that is to say found on their compile classpath.
	implementation 'org.apache.commons:commons-math3:3.6.1'

	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation 'com.google.guava:guava:22.0'

	// Use JUnit test framework
	testImplementation 'junit:junit:4.12'

	implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
}

// Déclaration de la classe principale
//mainClassName = 'com.MembreApplication' // Remplacez par le nom complet de votre classe principale

// Configuration spécifique pour Spring Boot
//springBoot {
//	mainClassName = 'com.MembreApplication' // Définit la classe principale pour l'exécution
//}
// Configuration spécifique pour Spring Boot

war {
	// Exclure les dépendances fournies par Spring Boot du fichier WAR
	exclude 'spring-boot-starter-tomcat'
	// Ajouter les classes à inclure dans le fichier WAR
	from sourceSets.main.output
}




test {
	useJUnitPlatform()
}
